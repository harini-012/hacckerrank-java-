import java.util.*;

class Node 
{
    int emer_id;
    Node next;
    Node(int emer_id) 
    {
        this.emer_id = emer_id;
        this.next = null;
    }
}

class Node1 
{
    int out_id;
    Node1 next;
    Node1(int out_id)
    {
        this.out_id = out_id;
        this.next = null;
    }
}

public class Solution 
{
    Node head;     
    Node1 head1;   

   
    public void insertAtNode(int emer_id) 
    {
        
        Node newNode = new Node(emer_id);
        if (head == null) 
        {
            head = newNode;
            return;
        }
        Node temp = head;
        while (temp.next != null) 
        {
            temp = temp.next;
        }
        temp.next = newNode;
    }

    public void insertAtNode1(int out_id) 
    {
        Node1 newNode = new Node1(out_id);
        if (head1 == null) 
        {
            head1 = newNode;
            return;
        }
        Node1 temp = head1;
        while (temp.next != null) 
        {
            temp = temp.next;
        }
        temp.next = newNode;
    }

    
    public static Node mergeLists(Node head, Node1 head1) 
    {
        Node dummy = new Node(0);
        Node tail = dummy;

        while (head != null && head1 != null) 
        {
            if (head.emer_id <= head1.out_id) 
            {
                
                
                tail.next = new Node(head.emer_id);
                head = head.next;
            } 
            else 
            {
                tail.next = new Node(head1.out_id);
                head1 = head1.next;
            }
            tail = tail.next;
        }

        while (head != null) 
        {
            tail.next = new Node(head.emer_id);
            head = head.next;
            tail = tail.next;
        }

        while (head1 != null) 
        {
            tail.next = new Node(head1.out_id);
            head1 = head1.next;
            tail = tail.next;
        }

        return dummy.next;
    }


    public static void print(Node head) {
        Node temp = head;
        while (temp != null) 
        {
            System.out.print(temp.emer_id + " ");
            temp = temp.next;
        }
    }

    public static void main(String[] args) 
    {
        Scanner sc = new Scanner(System.in);
        Solution sol = new Solution();

       
        int n = sc.nextInt();
        for (int i = 0; i < n; i++) 
        {
            sol.insertAtNode(sc.nextInt());
        }

       
        int m = sc.nextInt();
        for (int i = 0; i < m; i++) 
        {
            sol.insertAtNode1(sc.nextInt());
        }

        
        Node mergedHead = mergeLists(sol.head, sol.head1);
        print(mergedHead);
    }
}
