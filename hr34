import java.io.*;
import java.util.*;
class Node
{
    String ticket;
    Node next;
    Node(String ticket)
    {
        this.ticket=ticket;
        this.next=null;
    }
}
public class Solution 
{  
    Node front,rear;
    Solution()
    {
        this.front=null;
        this.rear=null;
    }
    void enqueue(String ticket)
    {
        Node newNode=new Node(ticket); 
        if(rear==null)
        {
            front=rear=newNode;
        }
        else
        {
            rear.next=newNode;
            rear=newNode;
        }
    }
    void dequeue()
    {
        if(front==null)
        {
            System.out.println("Queue is empty.");
            return;
        }
        else
        {
            System.out.print("Processed Ticket: ");
            System.out.print(front.ticket);
            
            front=front.next;
            if (front == null) 
            {
                rear = null;
            }
        }
        System.out.println();
        
    }
    void display()
    {
        if(front==null)
        {
            System.out.println("Queue is empty.");
            return;
        }
        else
        {
            Node temp=front;
            System.out.print("Current Queue: ");
            
            while(temp!=null)
            {
                System.out.print(temp.ticket+" ");
                temp=temp.next;
            }
        }
        System.out.println();
    }

    public static void main(String[] args) 
    {
       Scanner sc=new Scanner(System.in);
        Solution s=new Solution();
        int no=sc.nextInt();
        sc.nextLine();
        for(int i=0;i<no;i++)
        {
            String op=sc.next();
            if(op.equals("ENQUEUE"))
            {
                String ticket=sc.next();
                s.enqueue(ticket);
            }
            else if(op.equals("DEQUEUE"))
            {
                s.dequeue();
            }
            else if(op.equals("DISPLAY"))
            {
                s.display();
            }
            else if(op.equals("INVALIDCOMMAND"))
            {
                System.out.println("Invalid command.");
            }
            
        }
    }
}
