import java.io.*;
import java.util.*;
class Node
{
    int data;
    Node left,right;
    Node(int data)
    {
        this.data=data;
        this.left=null;
        this.right=null;
    }
}

public class Solution 
{
    static Node buildTree(String[]values)
    {
        if(values.length==0||values[0].equals("null"))
        {
            return null;
        }
        Node root=new Node(Integer.parseInt(values[0]));
        List<Node>queue=new ArrayList<>();
        queue.add(root);
        int qIndex=0;
        int i=1;
        while(i<values.length)
        {
            Node current=queue.get(qIndex++);
            if(i<values.length&&!values[i].equals("null"))
            {
                current.left=new Node(Integer.parseInt(values[i]));
                queue.add(current.left);
            }
            i++;
            if(i<values.length&&!values[i].equals("null"))
            {
                current.right=new Node(Integer.parseInt(values[i]));
                queue.add(current.right);
            }
            i++;
            
        }
        return root;
    }
    static int add(Node root)
    {
        int sum=0;
        if(root==null)
        {
            return 0;
        }
         if (root.left != null && root.left.left == null && root.left.right == null) 
         {
        sum += root.left.data;
    }
        
        sum += add(root.left);
        sum += add(root.right);

        return sum;
    }
    public static void main(String[] args) 
    {
       Solution sol=new Solution();
        Scanner sc=new Scanner(System.in);
        int no=sc.nextInt();
        sc.nextLine();
        String[]values=sc.nextLine().split(" ");
       Node root= sol.buildTree(values);
        System.out.println(sol.add(root));
    }
}
