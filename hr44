import java.io.*;
import java.util.*;
class Node
{
    int data;
    Node right,left;
    Node(int data)
    {
        this.data=data;
        this.left=null;
        this.right=null;
    }
}
public class Solution 
{
    static Node createTree(int[]arr)
    {
        if(arr.length==0||arr[0]==-1)
        {
            return null;
        }
        Node root=new Node(arr[0]);
        Queue<Node>q=new LinkedList<>();
        q.add(root);
        int i=1;
        while(!q.isEmpty()&&i<arr.length)
        {
            Node current=q.poll();//remove the front node
            if(arr[i]!=-1)
            {
                current.left=new Node(arr[i]);
                q.add(current.left);
                
            }
            i++;
            if(i>=arr.length)
            {
                break;
            }
            if(arr[i]!=-1)
            {
                current.right=new Node(arr[i]);
                q.add(current.right);
            }
            i++;
            
        }
        return root;
    
    }
    static void preOrder(Node root,List<Integer>preTree)
    {
        if(root==null)
        {
            return;
        }
        preTree.add(root.data);
        preOrder(root.left,preTree);
        preOrder(root.right,preTree);
    }


    public static void main(String[] args) 
    {
       Scanner sc=new Scanner(System.in);
       String[]input=sc.nextLine().trim().split(" ");
       int[]arr =new int[input.length];
        for(int i=0;i<input.length;i++)
        {
            arr[i]=Integer.parseInt(input[i]);
        }
        Node root=createTree(arr);
        List<Integer>preTree=new ArrayList<>();
        preOrder(root,preTree);
        for(int i:preTree)
        {
            System.out.print(i+" ");
        }
        
    }
}
